arguments: src/align_dataset_mtcnn.py Dataset/FaceData/raw Dataset/FaceData/processed --image_size 160 --margin 32 --random_order --gpu_memory_fraction 0.25
--------------------
tensorflow version: 2.16.1
--------------------
git hash: b'69ff1e149c0d84a123d6516ddd82970e65392608'
--------------------
b'diff --git a/src/face_rec_cam.py b/src/face_rec_cam.py\nindex 1a425a5..1dd380b 100644\n--- a/src/face_rec_cam.py\n+++ b/src/face_rec_cam.py\n@@ -2,7 +2,7 @@ from __future__ import absolute_import\n from __future__ import division\n from __future__ import print_function\n \n-import tensorflow as tf\n+import tensorflow.compat.v1 as tf\n from imutils.video import VideoStream\n \n \n@@ -39,6 +39,8 @@ def main():\n         model, class_names = pickle.load(file)\n     print("Custom Classifier, Successfully loaded")\n \n+    src_cam = int(input(\'source cam = \'))\n+\n     with tf.Graph().as_default():\n \n         # Cai dat GPU neu co\n@@ -62,7 +64,7 @@ def main():\n             people_detected = set()\n             person_detected = collections.Counter()\n \n-            cap  = VideoStream(src=0).start()\n+            cap  = VideoStream(src=src_cam).start()\n \n             while (True):\n                 frame = cap.read()\n@@ -105,7 +107,7 @@ def main():\n \n \n \n-                                if best_class_probabilities > 0.8:\n+                                if best_class_probabilities > 0.7:\n                                     cv2.rectangle(frame, (bb[i][0], bb[i][1]), (bb[i][2], bb[i][3]), (0, 255, 0), 2)\n                                     text_x = bb[i][0]\n                                     text_y = bb[i][3] + 20\n@@ -119,6 +121,11 @@ def main():\n                                     person_detected[best_name] += 1\n                                 else:\n                                     name = "Unknown"\n+                                    cv2.putText(frame, name, (text_x, text_y), cv2.FONT_HERSHEY_COMPLEX_SMALL,\n+                                                1, (255, 255, 255), thickness=1, lineType=2)\n+                                    cv2.putText(frame, str(round(best_class_probabilities[0], 3)), (text_x, text_y + 17),\n+                                                cv2.FONT_HERSHEY_COMPLEX_SMALL,\n+                                                1, (255, 255, 255), thickness=1, lineType=2)\n \n                 except:\n                     pass'